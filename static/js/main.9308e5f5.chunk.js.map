{"version":3,"sources":["firebase.js","component/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["database","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Contact","useState","name","setName","email","setEmail","message","setMessage","loading","setLoading","onSubmit","e","preventDefault","collection","add","then","catch","error","alert","className","onChange","target","value","placeholder","required","type","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAcMA,E,OAZcC,EAASC,cAAc,CAEvCC,OAAQ,0CACJC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,gBACnBC,MAAO,+CAIcC,YC8BdC,MAxCf,WAAoB,IAAD,EACSC,mBAAS,IADlB,mBACRC,EADQ,KACFC,EADE,OAEWF,mBAAS,IAFpB,mBAERG,EAFQ,KAEDC,EAFC,OAGeJ,mBAAS,IAHxB,mBAGRK,EAHQ,KAGCC,EAHD,OAIeN,oBAAS,GAJxB,mBAIRO,EAJQ,KAICC,EAJD,KA0Bf,OACI,uBAAMC,SArBW,SAACC,GAClBA,EAAEC,iBACFH,GAAW,GAEXpB,EAASwB,WAAW,WACnBC,IAAI,CACDZ,KAAOA,EACPE,MAAQA,EACRE,QAAUA,IAEbS,MAAK,kBAAIN,GAAW,MACpBO,OAAM,SAACC,GACJC,MAAMD,EAAMX,SACZG,GAAW,MAEfN,EAAQ,IACRE,EAAS,IACTE,EAAW,KAImBY,UAAU,OAAxC,UACI,iEACA,yCACA,uBAAOC,SAAU,SAACT,GAAD,OAAMR,EAAQQ,EAAEU,OAAOC,QAAQA,MAAOpB,EAAMqB,YAAY,OAAOC,UAAQ,IACxF,0CACA,uBAAOJ,SAAU,SAACT,GAAD,OAAMN,EAASM,EAAEU,OAAOC,QAAQA,MAAOlB,EAAOmB,YAAY,QAAQC,UAAQ,IAC3F,4CACA,0BAAUJ,SAAU,SAACT,GAAD,OAAMJ,EAAWI,EAAEU,OAAOC,QAAQA,MAAOhB,EAASiB,YAAY,eAAeC,UAAQ,IACzG,wBAAQC,KAAK,SAAb,SAAuBjB,EAAU,eAAiB,eC5B/CkB,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCMSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9308e5f5.chunk.js","sourcesContent":["/* const firebase = require(\"firebase\") */\nimport firebase from \"firebase\"\nconst firebaseApp = firebase.initializeApp({\n\n    apiKey: \"AIzaSyAh0LXnti0SHd4N2a9KuPh1JaIvkXb8OsA\",\n        authDomain: \"react-contact-form-57563.firebaseapp.com\",\n        databaseURL: \"https://react-contact-form-57563.firebaseio.com\",\n        projectId: \"react-contact-form-57563\",\n        storageBucket: \"react-contact-form-57563.appspot.com\",\n        messagingSenderId: \"1006976928942\",\n        appId: \"1:1006976928942:web:fc7fcaa445d0ea08ffb13f\"\n      \n})\n\nconst database = firebaseApp.firestore()\nexport {database}\n/* module.exports = database */","import React, {useState} from 'react'\nimport \"./Contact.css\"\nimport {database} from \"../firebase\"\n\nfunction Contact() {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    \n    const handleSubmit = (e)=> {\n        e.preventDefault()\n        setLoading(true)\n\n        database.collection(\"contact\")\n        .add({\n            name : name,\n            email : email,\n            message : message\n        })\n        .then(()=>setLoading(false))\n        .catch((error) => {\n            alert(error.message)\n            setLoading(false)\n        })\n        setName(\"\")\n        setEmail(\"\")\n        setMessage(\"\")\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form\">\n            <h1>Contact Form (react / firebase)</h1>\n            <label>Name</label>\n            <input onChange={(e)=> setName(e.target.value)} value={name} placeholder=\"name\" required />\n            <label>Email</label>\n            <input onChange={(e)=> setEmail(e.target.value)} value={email} placeholder=\"Email\" required />\n            <label>Message</label>\n            <textarea onChange={(e)=> setMessage(e.target.value)} value={message} placeholder=\"Your message\" required />\n            <button type=\"submit\">{loading ? \"Submiting...\" : \"Submit\"}</button>\n        </form>\n    )\n}\n\nexport default Contact","import React from \"react\"\nimport Contact from \"./component/Contact\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Contact/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}